---

- name: configure esxi servers
  hosts: esxi
  gather_facts: false
  become: false

  tasks:
    - name: Check known_hosts for {{ inventory_hostname }}
      local_action: shell ssh-keygen -F {{ inventory_hostname }}
      register: has_entry_in_known_hosts_file
      changed_when: false
      ignore_errors: true

    - name: Ignore host key for {{ inventory_hostname }} on first run
      when: has_entry_in_known_hosts_file.rc == 1
      set_fact:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - block:
      - name: netboot esxi install
        dellemc.openmanage.idrac_os_deployment:
          idrac_ip: "{{ drac }}"
          idrac_user: "{{ idrac_user }}"
          idrac_password: "{{ idrac_password }}"
          validate_certs: false
          share_name: "{{ hostvars[nfs_server]['net_ip'] }}:{{ nfs_share }}"
          iso_image:  "{{ esxi_iso | regex_replace('\\.iso', '') }}-{{ inventory_hostname_short }}.iso"
          expose_duration: 60
        delegate_to: 127.0.0.1

      rescue:

        - name: reset drac
          dellemc.openmanage.idrac_reset:
            idrac_ip: "{{ drac }}"
            idrac_user: "{{ idrac_user }}"
            idrac_password: "{{ idrac_password }}"
            validate_certs: false
          delegate_to: 127.0.0.1

        - name: Wait for drac to come back
          ansible.builtin.wait_for:
            host: "{{ drac }}"
            port: 443
            delay: 120
          delegate_to: 127.0.0.1

        - name: Sleep for 60 seconds
          ansible.builtin.wait_for:
            timeout: 60
          delegate_to: 127.0.0.1

        - name: netboot esxi install (retry)
          dellemc.openmanage.idrac_os_deployment:
            idrac_ip: "{{ drac }}"
            idrac_user: "{{ idrac_user }}"
            idrac_password: "{{ idrac_password }}"
            validate_certs: false
            share_name: "{{ hostvars[nfs_server]['net_ip'] }}:{{ nfs_share }}"
            iso_image:  "{{ esxi_iso | regex_replace('\\.iso', '') }}-{{ inventory_hostname_short }}.iso"
            expose_duration: 60
          delegate_to: 127.0.0.1

  handlers:
    - name: reload nfs
      ansible.builtin.systemd_service:
        name: "nfs-server"
        state: reloaded

...
